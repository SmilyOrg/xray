{
	"name": "Haxe",
	"scopeName": "source.haxe",
	"fileTypes": ["hx"],
	"patterns":
	[
		{
			"begins": "\"",
			"ends": "\"",
			"match": "\".+?\"",
			"name": "string",
			"patterns":
			[
				{
					"name": "escape",
					"match": "\\\\."
				}
			]
		},
		{
			"match": "//.*",
			"name": "comment"
		},
		{
			"match": "\\b(class|typedef|abstract|enum|package|import|using)\\b",
			"name": "directive"
		},
		{
			"match": "\\b(while|return|super|this|new|default|for|case|switch|var|if|else|try|catch|function|public|private|static|override|dynamic|inline|macro|trace)\\b",
			"name": "keyword"
		},
		{
			"match": "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)\\b",
			"name": "constant"
		},
		{
			"match": "\\b(true|false|null)\\b",
			"name": "constant"
		},
		{
			"match": "(\\^|>>>|\\-|>>|<<|\\|\\||\\!=|\\*|%|<=|<|\\.\\.\\.|>=|>|==|/|\\||&|\\+=|-=|/=|\\*=|<<=|>>=|>>>=|\\|=|&=|\\^=|=|=>|&&|\\+)",
			"name": "operator"
		},
		{
			"match": "(\\!|~|\\-|\\+\\+|\\-\\-)",
			"name": "operator"
		},
		{
			"match": "\\b[A-Z][a-zA-Z0-9_]+\\b",
			"name": "directive"
		},
		{
			"match": "\\b[a-zA-Z0-9_]+\\b",
			"name": "string"
		}
	]
}